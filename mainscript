<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Void Whisper</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            background: linear-gradient(45deg, #000, #111, #000, #222);
            background-size: 400% 400%;
            animation: glitch-bg 2s ease-in-out infinite alternate;
            font-family: 'Courier New', monospace;
            color: #fff;
            overflow: hidden;
            cursor: none; /* Remove cursor for added unease */
        }
        @keyframes glitch-bg {
            0% { background-position: 0% 50%; filter: hue-rotate(0deg) contrast(1); }
            50% { background-position: 100% 50%; filter: hue-rotate(180deg) contrast(1.5); }
            100% { background-position: 0% 50%; filter: hue-rotate(360deg) contrast(0.8); }
        }
        /* Static noise overlay */
        .noise {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><rect fill="%23fff" width="1" height="1" x="%(Math.random()*100).toFixed(0)" y="%(Math.random()*100).toFixed(0)"/></svg>') repeat;
            opacity: 0.05;
            pointer-events: none;
            animation: flicker 0.1s infinite;
        }
        @keyframes flicker {
            0%, 100% { opacity: 0.05; }
            50% { opacity: 0.1; }
        }
        /* Crawling ants (distressing lines) */
        .ants {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: repeating-linear-gradient(
                90deg,
                transparent,
                transparent 2px,
                rgba(255,0,0,0.03) 2px,
                rgba(255,0,0,0.03) 4px
            );
            animation: crawl 20s linear infinite;
        }
        @keyframes crawl {
            0% { transform: translateX(0); }
            100% { transform: translateX(-100px); }
        }
        /* Moving strings container */
        .strings-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 10;
        }
        .string {
            position: absolute;
            font-size: 18px;
            font-weight: bold;
            color: rgba(255,255,255,0.6);
            white-space: nowrap;
            animation: move-left linear infinite;
            text-shadow: 0 0 5px rgba(0,0,0,0.5);
        }
        @keyframes move-left {
            0% { transform: translateX(100vw); }
            100% { transform: translateX(-100%); }
        }
        /* Random delays and durations for chaos */
        .string:nth-child(odd) { top: 20%; animation-duration: 15s; color: rgba(255,0,0,0.4); }
        .string:nth-child(even) { top: 40%; animation-duration: 25s; color: rgba(0,255,0,0.4); }
        .string:nth-child(3n) { top: 60%; animation-duration: 20s; color: rgba(0,0,255,0.4); }
        .string:nth-child(4n) { top: 80%; animation-duration: 30s; color: rgba(255,255,0,0.4); }
        /* Hidden special string - blends in, medium speed, upper-middle */
        .special-string {
            top: 30% !important;
            animation-duration: 18s !important;
            color: rgba(255,255,255,0.5) !important;
            font-size: 16px !important; /* Slightly smaller to blend */
        }
        /* Awkward central text - distorted and twitching */
        .center-text {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 48px;
            text-align: center;
            animation: twitch 0.5s infinite alternate;
            letter-spacing: -2px;
            opacity: 0.7;
        }
        @keyframes twitch {
            0% { transform: translate(-50%, -50%) rotate(0deg) scale(1); }
            100% { transform: translate(-50%, -50%) rotate(1deg) scale(1.05); }
        }
    </style>
</head>
<body>
    <div class="noise"></div>
    <div class="ants"></div>
    <div class="strings-container" id="stringsContainer"></div>
    <div class="center-text">w h a t . a r e . y o u . l o o k i n g . a t ?</div>

    <script>
        // Random letter generator
        function generateRandomString(length = 12) {
            const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
            let result = '';
            for (let i = 0; i < length; i++) {
                result += chars.charAt(Math.floor(Math.random() * chars.length));
            }
            return result;
        }

        // Create 20 chaotic moving strings
        const container = document.getElementById('stringsContainer');
        for (let i = 0; i < 20; i++) {
            const div = document.createElement('div');
            div.className = 'string';
            div.textContent = generateRandomString(Math.floor(Math.random() * 15) + 8);
            // Random delay
            div.style.animationDelay = Math.random() * 10 + 's';
            container.appendChild(div);
        }

        // Add the hidden special string - insert at a random position to bury it
        const specialDiv = document.createElement('div');
        specialDiv.className = 'string special-string';
        specialDiv.textContent = 'IFindVelarnsCreepy';
        specialDiv.style.animationDelay = Math.random() * 5 + 's'; // Variable delay
        // Insert at a random index among the others
        container.appendChild(specialDiv);

        // Refresh strings every 30s for endless distress
        setInterval(() => {
            const strings = container.querySelectorAll('.string');
            strings.forEach((str, index) => {
                if (index !== Array.from(strings).indexOf(specialDiv)) { // Don't change the special one
                    str.textContent = generateRandomString();
                }
            });
        }, 30000);
    </script>
</body>
</html>
